-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from SimpleImperativeLanguage/Par.y
-----------------------------------------------------------------------------

state 14 contains 4 reduce/reduce conflicts.
state 23 contains 1 shift/reduce conflicts.
state 43 contains 4 shift/reduce conflicts.
state 44 contains 2 shift/reduce conflicts.
state 48 contains 4 shift/reduce conflicts.
state 49 contains 4 shift/reduce conflicts.
state 50 contains 4 shift/reduce conflicts.
state 51 contains 4 shift/reduce conflicts.
state 54 contains 2 shift/reduce conflicts.
state 56 contains 2 shift/reduce conflicts.
state 59 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pComm -> Comm                               (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	IntExp -> Integer                                  (3)
	IntExp -> Ident                                    (4)
	IntExp -> '-' IntExp                               (5)
	IntExp -> IntExp '+' IntExp                        (6)
	IntExp -> IntExp '-' IntExp                        (7)
	IntExp -> IntExp '*' IntExp                        (8)
	IntExp -> IntExp '/' IntExp                        (9)
	BoolExp -> 'true'                                  (10)
	BoolExp -> 'false'                                 (11)
	BoolExp -> IntExp '==' IntExp                      (12)
	BoolExp -> IntExp '!=' IntExp                      (13)
	BoolExp -> IntExp '<' IntExp                       (14)
	BoolExp -> IntExp '>' IntExp                       (15)
	BoolExp -> BoolExp '&&' BoolExp                    (16)
	BoolExp -> BoolExp '||' BoolExp                    (17)
	BoolExp -> '!' BoolExp                             (18)
	BoolExp -> Ident                                   (19)
	Comm -> 'skip'                                     (20)
	Comm -> 'let' Ident '=' IntExp                     (21)
	Comm -> 'let' Ident '=' BoolExp                    (22)
	Comm -> Ident '=' IntExp                           (23)
	Comm -> Ident '=' BoolExp                          (24)
	Comm -> Comm ';' Comm                              (25)
	Comm -> 'if' '(' BoolExp ')' Comm 'else' Comm      (26)
	Comm -> 'while' '(' BoolExp ')' '{' Comm '}'       (27)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'&&'           { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	'-'            { PT _ (TS _ 8) }
	'/'            { PT _ (TS _ 9) }
	';'            { PT _ (TS _ 10) }
	'<'            { PT _ (TS _ 11) }
	'='            { PT _ (TS _ 12) }
	'=='           { PT _ (TS _ 13) }
	'>'            { PT _ (TS _ 14) }
	'else'         { PT _ (TS _ 15) }
	'false'        { PT _ (TS _ 16) }
	'if'           { PT _ (TS _ 17) }
	'let'          { PT _ (TS _ 18) }
	'skip'         { PT _ (TS _ 19) }
	'true'         { PT _ (TS _ 20) }
	'while'        { PT _ (TS _ 21) }
	'{'            { PT _ (TS _ 22) }
	'||'           { PT _ (TS _ 23) }
	'}'            { PT _ (TS _ 24) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pComm    rule  0
	Ident           rule  1
	Integer         rule  2
	IntExp          rules 3, 4, 5, 6, 7, 8, 9
	BoolExp         rules 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
	Comm            rules 20, 21, 22, 23, 24, 25, 26, 27

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pComm -> . Comm                              (rule 0)

	'if'           shift, and enter state 5
	'let'          shift, and enter state 6
	'skip'         shift, and enter state 7
	'while'        shift, and enter state 8
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Comm           goto state 4

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'&&'           reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'else'         reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1
	%eof           reduce using rule 1


State 3

	Comm -> Ident . '=' IntExp                          (rule 23)
	Comm -> Ident . '=' BoolExp                         (rule 24)

	'='            shift, and enter state 13


State 4

	%start_pComm -> Comm .                              (rule 0)
	Comm -> Comm . ';' Comm                             (rule 25)

	';'            shift, and enter state 12
	%eof           accept


State 5

	Comm -> 'if' . '(' BoolExp ')' Comm 'else' Comm     (rule 26)

	'('            shift, and enter state 11


State 6

	Comm -> 'let' . Ident '=' IntExp                    (rule 21)
	Comm -> 'let' . Ident '=' BoolExp                   (rule 22)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 7

	Comm -> 'skip' .                                    (rule 20)

	';'            reduce using rule 20
	'else'         reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 8

	Comm -> 'while' . '(' BoolExp ')' '{' Comm '}'      (rule 27)

	'('            shift, and enter state 9


State 9

	Comm -> 'while' '(' . BoolExp ')' '{' Comm '}'      (rule 27)

	'!'            shift, and enter state 18
	'-'            shift, and enter state 19
	'false'        shift, and enter state 20
	'true'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 14
	Integer        goto state 15
	IntExp         goto state 24
	BoolExp        goto state 27

State 10

	Comm -> 'let' Ident . '=' IntExp                    (rule 21)
	Comm -> 'let' Ident . '=' BoolExp                   (rule 22)

	'='            shift, and enter state 26


State 11

	Comm -> 'if' '(' . BoolExp ')' Comm 'else' Comm     (rule 26)

	'!'            shift, and enter state 18
	'-'            shift, and enter state 19
	'false'        shift, and enter state 20
	'true'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 14
	Integer        goto state 15
	IntExp         goto state 24
	BoolExp        goto state 25

State 12

	Comm -> Comm ';' . Comm                             (rule 25)

	'if'           shift, and enter state 5
	'let'          shift, and enter state 6
	'skip'         shift, and enter state 7
	'while'        shift, and enter state 8
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Comm           goto state 23

State 13

	Comm -> Ident '=' . IntExp                          (rule 23)
	Comm -> Ident '=' . BoolExp                         (rule 24)

	'!'            shift, and enter state 18
	'-'            shift, and enter state 19
	'false'        shift, and enter state 20
	'true'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 14
	Integer        goto state 15
	IntExp         goto state 16
	BoolExp        goto state 17

State 14

	IntExp -> Ident .                                   (rule 4)
	BoolExp -> Ident .                                  (rule 19)

	'!='           reduce using rule 4
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 19
			(reduce using rule 4)

	'<'            reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'else'         reduce using rule 19
			(reduce using rule 4)

	'||'           reduce using rule 19
	'}'            reduce using rule 19
			(reduce using rule 4)

	%eof           reduce using rule 19
			(reduce using rule 4)



State 15

	IntExp -> Integer .                                 (rule 3)

	'!='           reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'else'         reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3
	%eof           reduce using rule 3


State 16

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)
	BoolExp -> IntExp . '==' IntExp                     (rule 12)
	BoolExp -> IntExp . '!=' IntExp                     (rule 13)
	BoolExp -> IntExp . '<' IntExp                      (rule 14)
	BoolExp -> IntExp . '>' IntExp                      (rule 15)
	Comm -> Ident '=' IntExp .                          (rule 23)

	'!='           shift, and enter state 34
	'*'            shift, and enter state 35
	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'/'            shift, and enter state 38
	';'            reduce using rule 23
	'<'            shift, and enter state 39
	'=='           shift, and enter state 40
	'>'            shift, and enter state 41
	'else'         reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 17

	BoolExp -> BoolExp . '&&' BoolExp                   (rule 16)
	BoolExp -> BoolExp . '||' BoolExp                   (rule 17)
	Comm -> Ident '=' BoolExp .                         (rule 24)

	'&&'           shift, and enter state 28
	';'            reduce using rule 24
	'else'         reduce using rule 24
	'||'           shift, and enter state 30
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 18

	BoolExp -> '!' . BoolExp                            (rule 18)

	'!'            shift, and enter state 18
	'-'            shift, and enter state 19
	'false'        shift, and enter state 20
	'true'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 14
	Integer        goto state 15
	IntExp         goto state 24
	BoolExp        goto state 44

State 19

	IntExp -> '-' . IntExp                              (rule 5)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 43

State 20

	BoolExp -> 'false' .                                (rule 11)

	'&&'           reduce using rule 11
	')'            reduce using rule 11
	';'            reduce using rule 11
	'else'         reduce using rule 11
	'||'           reduce using rule 11
	'}'            reduce using rule 11
	%eof           reduce using rule 11


State 21

	BoolExp -> 'true' .                                 (rule 10)

	'&&'           reduce using rule 10
	')'            reduce using rule 10
	';'            reduce using rule 10
	'else'         reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


State 22

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'else'         reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2
	%eof           reduce using rule 2


State 23

	Comm -> Comm . ';' Comm                             (rule 25)
	Comm -> Comm ';' Comm .                             (rule 25)

	';'            shift, and enter state 12
			(reduce using rule 25)

	'else'         reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 24

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)
	BoolExp -> IntExp . '==' IntExp                     (rule 12)
	BoolExp -> IntExp . '!=' IntExp                     (rule 13)
	BoolExp -> IntExp . '<' IntExp                      (rule 14)
	BoolExp -> IntExp . '>' IntExp                      (rule 15)

	'!='           shift, and enter state 34
	'*'            shift, and enter state 35
	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'/'            shift, and enter state 38
	'<'            shift, and enter state 39
	'=='           shift, and enter state 40
	'>'            shift, and enter state 41


State 25

	BoolExp -> BoolExp . '&&' BoolExp                   (rule 16)
	BoolExp -> BoolExp . '||' BoolExp                   (rule 17)
	Comm -> 'if' '(' BoolExp . ')' Comm 'else' Comm     (rule 26)

	'&&'           shift, and enter state 28
	')'            shift, and enter state 33
	'||'           shift, and enter state 30


State 26

	Comm -> 'let' Ident '=' . IntExp                    (rule 21)
	Comm -> 'let' Ident '=' . BoolExp                   (rule 22)

	'!'            shift, and enter state 18
	'-'            shift, and enter state 19
	'false'        shift, and enter state 20
	'true'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 14
	Integer        goto state 15
	IntExp         goto state 31
	BoolExp        goto state 32

State 27

	BoolExp -> BoolExp . '&&' BoolExp                   (rule 16)
	BoolExp -> BoolExp . '||' BoolExp                   (rule 17)
	Comm -> 'while' '(' BoolExp . ')' '{' Comm '}'      (rule 27)

	'&&'           shift, and enter state 28
	')'            shift, and enter state 29
	'||'           shift, and enter state 30


State 28

	BoolExp -> BoolExp '&&' . BoolExp                   (rule 16)

	'!'            shift, and enter state 18
	'-'            shift, and enter state 19
	'false'        shift, and enter state 20
	'true'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 14
	Integer        goto state 15
	IntExp         goto state 24
	BoolExp        goto state 56

State 29

	Comm -> 'while' '(' BoolExp ')' . '{' Comm '}'      (rule 27)

	'{'            shift, and enter state 55


State 30

	BoolExp -> BoolExp '||' . BoolExp                   (rule 17)

	'!'            shift, and enter state 18
	'-'            shift, and enter state 19
	'false'        shift, and enter state 20
	'true'         shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 14
	Integer        goto state 15
	IntExp         goto state 24
	BoolExp        goto state 54

State 31

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)
	BoolExp -> IntExp . '==' IntExp                     (rule 12)
	BoolExp -> IntExp . '!=' IntExp                     (rule 13)
	BoolExp -> IntExp . '<' IntExp                      (rule 14)
	BoolExp -> IntExp . '>' IntExp                      (rule 15)
	Comm -> 'let' Ident '=' IntExp .                    (rule 21)

	'!='           shift, and enter state 34
	'*'            shift, and enter state 35
	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'/'            shift, and enter state 38
	';'            reduce using rule 21
	'<'            shift, and enter state 39
	'=='           shift, and enter state 40
	'>'            shift, and enter state 41
	'else'         reduce using rule 21
	'}'            reduce using rule 21
	%eof           reduce using rule 21


State 32

	BoolExp -> BoolExp . '&&' BoolExp                   (rule 16)
	BoolExp -> BoolExp . '||' BoolExp                   (rule 17)
	Comm -> 'let' Ident '=' BoolExp .                   (rule 22)

	'&&'           shift, and enter state 28
	';'            reduce using rule 22
	'else'         reduce using rule 22
	'||'           shift, and enter state 30
	'}'            reduce using rule 22
	%eof           reduce using rule 22


State 33

	Comm -> 'if' '(' BoolExp ')' . Comm 'else' Comm     (rule 26)

	'if'           shift, and enter state 5
	'let'          shift, and enter state 6
	'skip'         shift, and enter state 7
	'while'        shift, and enter state 8
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Comm           goto state 53

State 34

	BoolExp -> IntExp '!=' . IntExp                     (rule 13)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 52

State 35

	IntExp -> IntExp '*' . IntExp                       (rule 8)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 51

State 36

	IntExp -> IntExp '+' . IntExp                       (rule 6)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 50

State 37

	IntExp -> IntExp '-' . IntExp                       (rule 7)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 49

State 38

	IntExp -> IntExp '/' . IntExp                       (rule 9)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 48

State 39

	BoolExp -> IntExp '<' . IntExp                      (rule 14)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 47

State 40

	BoolExp -> IntExp '==' . IntExp                     (rule 12)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 46

State 41

	BoolExp -> IntExp '>' . IntExp                      (rule 15)

	'-'            shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 22

	Ident          goto state 42
	Integer        goto state 15
	IntExp         goto state 45

State 42

	IntExp -> Ident .                                   (rule 4)

	'!='           reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'else'         reduce using rule 4
	'||'           reduce using rule 4
	'}'            reduce using rule 4
	%eof           reduce using rule 4


State 43

	IntExp -> '-' IntExp .                              (rule 5)
	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)

	'!='           reduce using rule 5
	'&&'           reduce using rule 5
	')'            reduce using rule 5
	'*'            shift, and enter state 35
			(reduce using rule 5)

	'+'            shift, and enter state 36
			(reduce using rule 5)

	'-'            shift, and enter state 37
			(reduce using rule 5)

	'/'            shift, and enter state 38
			(reduce using rule 5)

	';'            reduce using rule 5
	'<'            reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'else'         reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	%eof           reduce using rule 5


State 44

	BoolExp -> BoolExp . '&&' BoolExp                   (rule 16)
	BoolExp -> BoolExp . '||' BoolExp                   (rule 17)
	BoolExp -> '!' BoolExp .                            (rule 18)

	'&&'           shift, and enter state 28
			(reduce using rule 18)

	')'            reduce using rule 18
	';'            reduce using rule 18
	'else'         reduce using rule 18
	'||'           shift, and enter state 30
			(reduce using rule 18)

	'}'            reduce using rule 18
	%eof           reduce using rule 18


State 45

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)
	BoolExp -> IntExp '>' IntExp .                      (rule 15)

	'&&'           reduce using rule 15
	')'            reduce using rule 15
	'*'            shift, and enter state 35
	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'/'            shift, and enter state 38
	';'            reduce using rule 15
	'else'         reduce using rule 15
	'||'           reduce using rule 15
	'}'            reduce using rule 15
	%eof           reduce using rule 15


State 46

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)
	BoolExp -> IntExp '==' IntExp .                     (rule 12)

	'&&'           reduce using rule 12
	')'            reduce using rule 12
	'*'            shift, and enter state 35
	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'/'            shift, and enter state 38
	';'            reduce using rule 12
	'else'         reduce using rule 12
	'||'           reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 47

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)
	BoolExp -> IntExp '<' IntExp .                      (rule 14)

	'&&'           reduce using rule 14
	')'            reduce using rule 14
	'*'            shift, and enter state 35
	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'/'            shift, and enter state 38
	';'            reduce using rule 14
	'else'         reduce using rule 14
	'||'           reduce using rule 14
	'}'            reduce using rule 14
	%eof           reduce using rule 14


State 48

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)
	IntExp -> IntExp '/' IntExp .                       (rule 9)

	'!='           reduce using rule 9
	'&&'           reduce using rule 9
	')'            reduce using rule 9
	'*'            shift, and enter state 35
			(reduce using rule 9)

	'+'            shift, and enter state 36
			(reduce using rule 9)

	'-'            shift, and enter state 37
			(reduce using rule 9)

	'/'            shift, and enter state 38
			(reduce using rule 9)

	';'            reduce using rule 9
	'<'            reduce using rule 9
	'=='           reduce using rule 9
	'>'            reduce using rule 9
	'else'         reduce using rule 9
	'||'           reduce using rule 9
	'}'            reduce using rule 9
	%eof           reduce using rule 9


State 49

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp '-' IntExp .                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)

	'!='           reduce using rule 7
	'&&'           reduce using rule 7
	')'            reduce using rule 7
	'*'            shift, and enter state 35
			(reduce using rule 7)

	'+'            shift, and enter state 36
			(reduce using rule 7)

	'-'            shift, and enter state 37
			(reduce using rule 7)

	'/'            shift, and enter state 38
			(reduce using rule 7)

	';'            reduce using rule 7
	'<'            reduce using rule 7
	'=='           reduce using rule 7
	'>'            reduce using rule 7
	'else'         reduce using rule 7
	'||'           reduce using rule 7
	'}'            reduce using rule 7
	%eof           reduce using rule 7


State 50

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp '+' IntExp .                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)

	'!='           reduce using rule 6
	'&&'           reduce using rule 6
	')'            reduce using rule 6
	'*'            shift, and enter state 35
			(reduce using rule 6)

	'+'            shift, and enter state 36
			(reduce using rule 6)

	'-'            shift, and enter state 37
			(reduce using rule 6)

	'/'            shift, and enter state 38
			(reduce using rule 6)

	';'            reduce using rule 6
	'<'            reduce using rule 6
	'=='           reduce using rule 6
	'>'            reduce using rule 6
	'else'         reduce using rule 6
	'||'           reduce using rule 6
	'}'            reduce using rule 6
	%eof           reduce using rule 6


State 51

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp '*' IntExp .                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)

	'!='           reduce using rule 8
	'&&'           reduce using rule 8
	')'            reduce using rule 8
	'*'            shift, and enter state 35
			(reduce using rule 8)

	'+'            shift, and enter state 36
			(reduce using rule 8)

	'-'            shift, and enter state 37
			(reduce using rule 8)

	'/'            shift, and enter state 38
			(reduce using rule 8)

	';'            reduce using rule 8
	'<'            reduce using rule 8
	'=='           reduce using rule 8
	'>'            reduce using rule 8
	'else'         reduce using rule 8
	'||'           reduce using rule 8
	'}'            reduce using rule 8
	%eof           reduce using rule 8


State 52

	IntExp -> IntExp . '+' IntExp                       (rule 6)
	IntExp -> IntExp . '-' IntExp                       (rule 7)
	IntExp -> IntExp . '*' IntExp                       (rule 8)
	IntExp -> IntExp . '/' IntExp                       (rule 9)
	BoolExp -> IntExp '!=' IntExp .                     (rule 13)

	'&&'           reduce using rule 13
	')'            reduce using rule 13
	'*'            shift, and enter state 35
	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'/'            shift, and enter state 38
	';'            reduce using rule 13
	'else'         reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 53

	Comm -> Comm . ';' Comm                             (rule 25)
	Comm -> 'if' '(' BoolExp ')' Comm . 'else' Comm     (rule 26)

	';'            shift, and enter state 12
	'else'         shift, and enter state 58


State 54

	BoolExp -> BoolExp . '&&' BoolExp                   (rule 16)
	BoolExp -> BoolExp . '||' BoolExp                   (rule 17)
	BoolExp -> BoolExp '||' BoolExp .                   (rule 17)

	'&&'           shift, and enter state 28
			(reduce using rule 17)

	')'            reduce using rule 17
	';'            reduce using rule 17
	'else'         reduce using rule 17
	'||'           shift, and enter state 30
			(reduce using rule 17)

	'}'            reduce using rule 17
	%eof           reduce using rule 17


State 55

	Comm -> 'while' '(' BoolExp ')' '{' . Comm '}'      (rule 27)

	'if'           shift, and enter state 5
	'let'          shift, and enter state 6
	'skip'         shift, and enter state 7
	'while'        shift, and enter state 8
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Comm           goto state 57

State 56

	BoolExp -> BoolExp . '&&' BoolExp                   (rule 16)
	BoolExp -> BoolExp '&&' BoolExp .                   (rule 16)
	BoolExp -> BoolExp . '||' BoolExp                   (rule 17)

	'&&'           shift, and enter state 28
			(reduce using rule 16)

	')'            reduce using rule 16
	';'            reduce using rule 16
	'else'         reduce using rule 16
	'||'           shift, and enter state 30
			(reduce using rule 16)

	'}'            reduce using rule 16
	%eof           reduce using rule 16


State 57

	Comm -> Comm . ';' Comm                             (rule 25)
	Comm -> 'while' '(' BoolExp ')' '{' Comm . '}'      (rule 27)

	';'            shift, and enter state 12
	'}'            shift, and enter state 60


State 58

	Comm -> 'if' '(' BoolExp ')' Comm 'else' . Comm     (rule 26)

	'if'           shift, and enter state 5
	'let'          shift, and enter state 6
	'skip'         shift, and enter state 7
	'while'        shift, and enter state 8
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Comm           goto state 59

State 59

	Comm -> Comm . ';' Comm                             (rule 25)
	Comm -> 'if' '(' BoolExp ')' Comm 'else' Comm .     (rule 26)

	';'            shift, and enter state 12
			(reduce using rule 26)

	'else'         reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 60

	Comm -> 'while' '(' BoolExp ')' '{' Comm '}' .      (rule 27)

	';'            reduce using rule 27
	'else'         reduce using rule 27
	'}'            reduce using rule 27
	%eof           reduce using rule 27


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 28
Number of terminals: 26
Number of non-terminals: 6
Number of states: 61
